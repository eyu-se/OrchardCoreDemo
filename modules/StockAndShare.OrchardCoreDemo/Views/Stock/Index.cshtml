@* The "shapes" object is an IEnumerable<dynamic>
    so we just simply enumerate it and use the previously seen
    DisplayAsync helper to display these shapes. *@

    @model IEnumerable<StockPartViewModel>
        @using Microsoft.AspNetCore.Mvc.Localization

        <h1>@T["List Of Stocks"]</h1>

        @* Notice how we use T.Plural() to display a different string based on the number of people. You could use the lazy
        "There are {0} person(s)." technique but that would not only be grammatically incorrect, it would also be lazy :). *@
        <strong>@T.Plural(Model.Count(), "There's one Stock.", "There are {0} people.")</strong>
        <ul>
            @foreach (var m in Model)
            {
            <li>
                @m.CompanyName <br />
            </li>
            }
        </ul>
